name: "Build Bootc Agent Bootstrap Images"
on:
  pull_request:
  schedule:
    - cron: '0 */12 * * *'

env:
  REGISTRY: quay.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        flavor: [centos, fedora, rhel]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Modify Containerfile
        run: |
          pushd bootc-agent-images/${{ matrix.flavor }}
          echo "${{ secrets.FLIGHTCTL_RSA_PUB }}" > flightctl_rsa.pub
          sed -i -e 's/^# COPY flightctl_rsa.pub \/usr\/etc-system\/root.keys/COPY flightctl_rsa.pub \/usr\/etc-system\/root.keys/' \
                 -e 's/^# RUN touch \/etc\/ssh\/sshd_config.d\/30-auth-system.conf;/RUN touch \/etc\/ssh\/sshd_config.d\/30-auth-system.conf;/' \
                 -e 's/^#     mkdir -p \/usr\/etc-system\/;/    mkdir -p \/usr\/etc-system\/;/' \
                 -e 's/^#     echo '\''AuthorizedKeysFile \/usr\/etc-system\/%u.keys'\'' >> \/etc\/ssh\/sshd_config.d\/30-auth-system.conf;/    echo '\''AuthorizedKeysFile \/usr\/etc-system\/%u.keys'\'' >> \/etc\/ssh\/sshd_config.d\/30-auth-system.conf;/' \
                 -e 's/^#     chmod 0600 \/usr\/etc-system\/root.keys/    chmod 0600 \/usr\/etc-system\/root.keys/' \
                 -e 's/^# VOLUME \/var\/roothome/VOLUME \/var\/roothome/' Containerfile
          echo "${{ secrets.CA_CRT }}" > ca.crt
          echo "${{ secrets.CLIENT_ENROLLMENT_CRT }}" > client-enrollment.crt
          echo "${{ secrets.CLIENT_ENROLLMENT_KEY }}" > client-enrollment.key
          popd

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry.redhat.io (for RHEL image)
        uses: docker/login-action@v3
        with:
          registry: registry.redhat.io
          username: ${{ secrets.RH_REGISTRY_USERNAME }}
          password: ${{ secrets.RH_REGISTRY_PASSWORD }}

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_FLIGHTCTL_INFRA_ROBOT_USERNAME }}
          password: ${{ secrets.QUAY_FLIGHTCTL_INFRA_ROBOT_PASSWORD }}

      - name: Build image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: bootc-agent-images/${{ matrix.flavor }}
          file: bootc-agent-images/${{ matrix.flavor }}/Containerfile
          load: true
          tags: user/flightctl-agent:test

      - name: Test image
        run: |
          ID=$(docker create ${{ steps.build.outputs.imageid }} /verify-flightctl-agent.sh)
          docker cp .github/workflow-scripts/verify-flightctl-agent.sh $ID:/
          docker start $ID
          exit $(docker inspect $ID --format='{{.State.ExitCode}}')

      - name: Push image
        uses: docker/build-push-action@v2
        with:
          context: bootc-agent-images/${{ matrix.flavor }}
          file: bootc-agent-images/${{ matrix.flavor }}/Containerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ secrets.QUAY_FLIGHTCTL_INFRA_ROBOT_USERNAME }}/flightctl-agent-${{ matrix.flavor }}:bootstrap

